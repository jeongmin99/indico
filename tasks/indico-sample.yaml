
- name: install indico
  hosts: worker1
  gather_facts: no
  become: yes
  vars:
    hostname: "192.168.56.102"
  tasks:
    - name: install epel-release
      yum: name=epel-release state=latest

    - name: insertafter string in file
      lineinfile:
        path: /etc/yum.repos.d/CentOS-Base.repo
        insertafter: "{{item.exp}}"
        line: "{{item.line}}"

      loop:
        - { exp: '\[base\]', line: 'exclude=postgresql* '}
        - { exp: '\[updates\]', line: 'exclude=postgresql*   '}




    - name: install centos-release-scl
      yum: name=centos-release-scl

    - name: install postgresql-repos
      yum:
        name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        validate_certs: no


    - name: install postgresql
      yum:
        name:
          - postgresql13
          - postgresql13-server
          - postgresql13-libs
          - postgresql13-devel
          - postgresql13-contrib

    - name: install gccz
      yum:
        name:
          - git
          - gcc
          - make
          - redis
          - nginx

    - name: install lib
      yum:
        name:
          - libjpeg-turbo-devel
          - libxslt-devel
          - libxml2-devel
          - libffi-devel
          - pcre-devel
          - libyaml-devel
          - zlib-devel
          - bzip2
          - bzip2-devel
          - readline-devel
          - sqlite
          - sqlite-devel
          - openssl-devel
          - xz
          - xz-devel
          - findutils
          - libuuid-devel
          - tar

    - name: init postgresql
      shell: /usr/pgsql-13/bin/postgresql-13-setup initdb

    - name: start postgresql service
      systemd:
        daemon-reload: yes
        state: started
        name: "{{item}}"
      with_items:
        - postgresql-13.service
        - redis.service

    - name: create indico
      shell: "{{item}}"
      with_items:
        - su - postgres -c 'createuser indico'
        - su - postgres -c 'createdb -O indico indico'
        - su - postgres -c 'psql indico -c "CREATE EXTENSION unaccent; CREATE EXTENSION pg_trgm;"'

    - name: set uwsgi-indico.ini
      shell: |
         cat > /etc/uwsgi-indico.ini <<'EOF'
         [uwsgi]
         uid = indico
         gid = nginx
         umask = 027

         processes = 4
         enable-threads = true
         chmod-socket = 770
         socket = /opt/indico/web/uwsgi.sock
         stats = /opt/indico/web/uwsgi-stats.sock
         protocol = uwsgi

         master = true
         auto-procname = true
         procname-prefix-spaced = indico
         disable-logging = true

         single-interpreter = true

         touch-reload = /opt/indico/web/indico.wsgi
         wsgi-file = /opt/indico/web/indico.wsgi
         virtualenv = /opt/indico/.venv

         vacuum = true
         buffer-size = 20480
         memory-report = true
         max-requests = 2500
         harakiri = 900
         harakiri-verbose = true
         reload-on-rss = 2048
         evil-reload-on-rss = 8192


    - name: set indico-uwsgi.service
      shell: |
        cat > /etc/systemd/system/indico-uwsgi.service <<'EOF'
        [Unit]
        Description=Indico uWSGI
        After=network.target

        [Service]
        ExecStart=/opt/indico/.venv/bin/uwsgi --ini /etc/uwsgi-indico.ini
        ExecReload=/bin/kill -HUP $MAINPID
        Restart=always
        SyslogIdentifier=indico-uwsgi
        User=indico
        Group=nginx
        UMask=0027
        Type=notify
        NotifyAccess=all
        KillMode=mixed
        KillSignal=SIGQUIT
        TimeoutStopSec=300

        [Install]
        WantedBy=multi-user.target


    - name: set indico.conf
      shell: |
        cat > /etc/nginx/conf.d/indico.conf <<'EOF'
        server {
        listen 80;
        listen [::]:80;
        server_name "{{hostname}}";
        return 301 https://$server_name$request_uri;
        }

        server {
        listen       *:443 ssl http2;
        listen       [::]:443 ssl http2 default ipv6only=on;
        server_name  "{{hostname}}";

        ssl_certificate           /etc/ssl/indico/indico.crt;
        ssl_certificate_key       /etc/ssl/indico/indico.key;
        ssl_dhparam               /etc/ssl/indico/ffdhe2048;

        ssl_session_timeout       1d;
        ssl_session_cache         shared:SSL:10m;
        ssl_session_tickets       off;
        ssl_protocols             TLSv1.2 TLSv1.3;
        ssl_ciphers               ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        access_log            /opt/indico/log/nginx/access.log combined;
        error_log             /opt/indico/log/nginx/error.log;

        if ($host != $server_name) {
          rewrite ^/(.*) https://$server_name/$1 permanent;
        }

        location /.xsf/indico/ {
          internal;
          alias /opt/indico/;
        }

        location ~ ^/(images|fonts)(.*)/(.+?)(__v[0-9a-f]+)?\.([^.]+)$ {
          alias /opt/indico/web/static/$1$2/$3.$5;
          access_log off;
        }

        location ~ ^/(css|dist|images|fonts)/(.*)$ {
          alias /opt/indico/web/static/$1/$2;
          access_log off;
        }

        location /robots.txt {
          alias /opt/indico/web/static/robots.txt;
          access_log off;
        }

        location / {
          root /var/empty/nginx;
          include /etc/nginx/uwsgi_params;
          uwsgi_pass unix:/opt/indico/web/uwsgi.sock;
          uwsgi_param UWSGI_SCHEME $scheme;
          uwsgi_read_timeout 15m;
          uwsgi_buffers 32 32k;
          uwsgi_busy_buffers_size 128k;
          uwsgi_hide_header X-Sendfile;
          client_max_body_size 1G;

        }
        }


    - name: create ssl indico
      file:
        path: /etc/ssl/indico
        state: directory

    - name: change owner and mode
      file:
        path: /etc/ssl/indico/
        owner: root
        group: root
        mode: 0700

    - name: make tls
      shell: |
        cat > /etc/ssl/indico/ffdhe2048 <<'EOF'
        -----BEGIN DH PARAMETERS-----
        MIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz
        +8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a
        87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7
        YdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi
        7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD
        ssbzSibBsu/6iGtCOGEoXJf//////////wIBAg==
        -----END DH PARAMETERS-----


    - name: make key
      shell: openssl req -x509 -nodes -newkey rsa:4096 -subj /CN="{{hostname}}" -keyout /etc/ssl/indico/indico.key -out /etc/ssl/indico/indico.crt

    - name: config selinux
      shell: |
        cat > /tmp/indico.cil <<'EOF'
        ; define custom type that logrotate can access
        (type indico_log_t)
        (typeattributeset file_type (indico_log_t))
        (typeattributeset logfile (indico_log_t))
        (roletype object_r indico_log_t)

        ; allow logrotate to reload systemd services
        (allow logrotate_t init_t (service (start)))
        (allow logrotate_t policykit_t (dbus (send_msg)))
        (allow policykit_t logrotate_t (dbus (send_msg)))

        ; make sure the uwsgi socket is writable by the webserver
        (typetransition unconfined_service_t usr_t sock_file "uwsgi.sock" httpd_sys_rw_content_t)
        (filecon "/opt/indico/web/uwsgi\.sock" socket (system_u object_r httpd_sys_rw_content_t ((s0)(s0))))

        ; set proper types for our log dirs
        (filecon "/opt/indico/log(/.*)?" any (system_u object_r indico_log_t ((s0)(s0))))
        (filecon "/opt/indico/log/nginx(/.*)?" any (system_u object_r httpd_log_t ((s0)(s0))))




    - name: semodule
      shell: semodule -i /tmp/indico.cil

    - name: install indico
      shell: |
        cat > /etc/systemd/system/indico-celery.service <<'EOF'
        [Unit]
        Description=Indico Celery
        After=network.target

        [Service]
        ExecStart=/opt/indico/.venv/bin/indico celery worker -B
        Restart=always
        SyslogIdentifier=indico-celery
        User=indico
        Group=nginx
        UMask=0027
        Type=simple
        KillMode=mixed
        TimeoutStopSec=300

        [Install]
        WantedBy=multi-user.target


    - name: reload daemon
      systemd:
        daemon_reload: yes

    

    - name: add user
      user:
        name: indico
        group: nginx
        home: /opt/indico
        shell: /bin/bash
        system: true
        create_home: true
    
  
      
    - name: curl pyenv
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin"
      shell: curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash

    - name: bashrc cat
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin"
      shell: |
        cat >> ~/.bashrc <<'EOF'
        export PATH="/opt/indico/.pyenv/bin:/usr/pgsql-13/bin:/opt/indico/.venv/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"
      
   

    - name: source bashrc
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin"
      shell: source ~/.bashrc

    
    - name: pyenv install
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin"
      shell: . ~/.bashrc &&  pyenv install 3.9.16

    - name: pyenv global
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin"
      shell: . ~/.bashrc && pyenv global 3.9.16

    - name: python m
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin"
      shell: . ~/.bashrc && python -m venv --upgrade-deps --prompt indico ~/.venv

    - name: source activate
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin"
      shell: . ~/.bashrc && source ~/.venv/bin/activate

    - name: export path
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin"
      shell: . ~/.bashrc && export PATH="$PATH:/usr/pgsql-13/bin"

    - name: echo and append
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      shell: . ~/.bashrc && echo 'source ~/.venv/bin/activate' >> ~/.bashrc


    - name: pip install wheel
      become: yes
      become_user: indico
      become_method: su
      environment:
       path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin/"
      shell: . ~/.bashrc && pip install wheel


    - name: pip install uwsgi
      become: yes
      become_user: indico
      become_method: su
      environment:
       path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin/"
      shell: . ~/.bashrc && pip install uwsgi

    - name: pip install indico
      become: yes
      become_user: indico
      become_method: su
      environment:
       path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin/"
      shell: . ~/.bashrc && pip install indico
  
    - name: pip install root
      yum:
        name: python-pip
    
    - name: pip pexpect
      pip:
        name: pexpect

    - name: indico setup wizard
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      expect:
        command: /bin/bash -c "source ~/.bashrc && export PROMPT_TOOLKIT_COLOR_DEPTH=DEPTH_1_BIT && indico setup wizard | sed 's/\x1b\[0m//g'"
        responses:
          Indico root path:
            - ""
            - "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bhttps://192.168.56.102"
          PostgreSQL database URI:
            - ""
            - ""
          Redis URI \(cache\):
            - ""
            - "email@email.com"
          Admin email:
            - ""
            - ""
          SMTP host:
            - ""
            - ""
          SMTP username:
            - ""
            - ""
          Default timezone:
            - ""
            - "y"
          Enable system notices\?:
            - "y"
            - "y"

        echo: yes
        timeout: 10


    - name: mkdir
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      file:
        path: ~/log/nginx
        state: directory

    - name: chmod whatfile
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      shell: . ~/.bashrc && chmod go-rwx ~/* ~/.[^.]*

    - name: chmod tmp
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      shell: . ~/.bashrc &&  chmod 710 ~/ ~/archive ~/cache ~/log ~/tmp

    - name: chmod env
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      shell: . ~/.bashrc && chmod 750 ~/web ~/.venv

    - name: chmod nginx
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      shell: . ~/.bashrc && chmod g+w ~/log/nginx

    - name: restorecon
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      shell: . ~/.bashrc && restorecon -R ~/

    - name: echo man
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      shell: . ~/.bashrc && echo -e "\nSTATIC_FILE_METHOD = ('xaccelredirect', {'/opt/indico':'/.xsf/indico'})" >> ~/etc/indico.conf

    - name: db prepare
      become: yes
      become_user: indico
      become_method: su
      environment:
        path: "/opt/indico/.pyenv/shims:/opt/indico/.pyenv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/indico/.local/bin:/opt/indico/bin:/usr/pgsql-13/bin"
      shell: . ~/.bashrc && indico db prepare


    - name: restart service
      systemd:
        state: restarted
        name: "{{item}}"
      with_items:
        - nginx.service
        - indico-celery.service
        - indico-uwsgi.service

    - name: enable service
      systemd:
        enabled: true
        name: "{{item}}"
      with_items:
        - nginx.service
        - postgresql-13.service
        - redis.service
        - indico-celery.service
        - indico-uwsgi.service

    - name: firewall open
      firewalld:
        port: "{{item}}/tcp"
        state: enabled
        immediate: true
        permanent: true
      with_items:
        - 80
        - 443

